function : int Add (int a, int b){ return a + b;}
function : int Sub (int a, int b){ return a - b;}
function : int Mul (int a, int b){ return a * b;}
function : int Div (int a, int b){ return a / b;}
function : int Mod (int a, int b){ return a % b;}

function : int main(){
   typedef funcptr : int (int a, int b) OP;
   OP [5]ops;
   ops[0] = Add;
   ops[1] = Sub;
   ops[2] = Mul;
   ops[3] = Div;
   ops[4] = Mod;

   const int c = 20;
   int o = 0; while (o < 5){
      int i = 1; while (i < 3*c){
         cout << "-";
      i++;}
      cout << endl;

      i = 1; while (i < c){
         cout << i << "\t|";
         int j = 1; while (j < c){
            cout << ops[o](i,j) << " ";
            if (i - j * (i/j) != i % j){
               cout << "failed" << endl;
               exit(1);
            }
         ++j;}
         cout << endl;
      ++i;}
   o++;}

   return 0;
}
