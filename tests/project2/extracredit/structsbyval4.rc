const int c = 15;


structdef S { int [c] a; };
structdef S2 { S a; S b; S c; };

function : S2 foo (S x, S y, S z){
   static int calls = 1;

   S2 r;
   
   cout << "------------------" << endl;
   int i = 0;
   while (i < c){
      y.a[i] = (z.a[i] = x.a[i]  + c) + c;
      cout << x.a[i] << "." << y.a[i] << "." << z.a[i] << endl;
   i++;}
   
    cout << "--- inside foo call " << calls++ << endl;

   r.a = x; r.b = y; r.c = z;
   
   i = 0;
   while (i < c){
     cout << r.a.a[i] << "." << r.b.a[i] << "." <<  r.c.a[i++] << endl;
   }
   cout << "------------------" << endl;
   
   return r;
}

function : int main(){  
   S x, y, z;
   
   int i = 0; 
   
   while (i < c){
      x.a[i] = (y.a[i] = (z.a[i] = i) + 1) + 1;
   i++;}
   
   S2 a;
   a = foo(x,y,z);
   
   i = 0;
   while (i < c){
      x.a[i] = (y.a[i] = (z.a[i] = i*3) + 5) + 7;
   i++;}
   
   
   S2 b = foo(x,y,z);
   
   i = 0;
   while (i < c){
     cout << a.a.a[i] << "." << a.b.a[i] << "." <<  a.c.a[i++] << endl;
   }
   
   cout << "---" << endl;
   
   i = 0;
   while (i < c){
     cout << b.a.a[i] << "." << b.b.a[i] << "." <<  b.c.a[i++] << endl;
   }

   return 0;
}
